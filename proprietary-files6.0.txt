# The extract-files.sh and the setup-makefiles.sh both
# use the files specified here. 
#
# They eighter use ADB or when set to false in the 
# script it will use the folder 
# device/<vendor>/<device>/vendor/proprietary as source
#
# Each file you specifie here will be in the final build
# at the same place.

#All files from vendor folder
vendor/etc/audio_effects.conf
vendor/firmware/nvram4334_hw_fifa_ul.txt
vendor/firmware/nvram4334_hw_fifa_tugl.txt
vendor/firmware/nvram4334_hw_fifa_clg.txt
vendor/firmware/nvram4334_hw.txt
vendor/firmware/libpn547_fw.so
vendor/firmware/hifi_6402_4spk.img
vendor/firmware/hifi_6402.img
vendor/firmware/fw_bcm4334_test_hw_apsta.bin
vendor/firmware/fw_bcm4334_hw.bin
vendor/firmware/fw_bcm4334_apsta_hw.bin
vendor/firmware/BCM4334B0_002.001.013.1837.2355.hcd
vendor/framework/com.huawei.audioalgo.jar
vendor/lib/drm/libdrmwvmplugin.so
vendor/lib/egl/libGLES_mali.so
vendor/lib/mediadrm
vendor/lib/mediadrm/libwvdrmengine.so
vendor/lib/mediadrm/libdrmclearkeyplugin.so
vendor/lib/libwvm.so
vendor/lib/libwvdrm_L3.so
vendor/lib/libbt-vendor.so
vendor/lib/libWVStreamControlAPI_L3.so
vendor/lib/libOpenCL.so.1.1
vendor/lib/libOpenCL.so.1
vendor/lib/libOpenCL.so
vendor/lib64/egl/libGLES_mali.so
vendor/lib64/mediadrm/libdrmclearkeyplugin.so
vendor/lib64/libOpenCL.so.1.1
vendor/lib64/libOpenCL.so.1
vendor/lib64/libOpenCL.so
vendor/media/PFFprec_600.emd
vendor/media/LMspeed_508.emd


#init.rc - edited since a few binaries didn't even exist in the origin rom (5.0)
bin/powerlogd
bin/hwpged
bin/dumptool
bin/filebackup
bin/hwnffserver


#init.environ.rc (5.0)
framework/hwEmui.jar
framework/hwTelephony-common.jar
framework/hwframework.jar
framework/hwcustframework.jar
framework/hwcustTelephony-common.jar
framework/org.simalliance.openmobileapi.jar
framework/hwaps.jar
framework/hwServices.jar
framework/hwWifi-service.jar


#init.hi3635.rc - edited since a few binaries didn't even exist in the origin rom (5.0)
etc/kerneldump.sh

#init.connectivity.gps.rc (5.0)
bin/gpsdaemon
bin/glgps47531cl

#init.connectivity.bcm4334.rc - copied every config file not mentioned there (5.0)
bin/mac_addr_normalization
bin/wifiwakeupsrc
#one of these make the build fail
#bin/wpa_supplicant
#etc/wifi/wpa_supplicant_overlay.conf
#etc/wifi/wpa_supplicant.conf
#etc/wifi/p2p_supplicant_overlay.conf

#init.device.rc  (5.0) 
bin/device_monitor

#init.extmodem.rc - copied every config file not mentioned there (5.0)
bin/modemlogcat_via
etc/modemConfig/viacbp82d_log.bcfg
etc/modemConfig/viacbp82d_shutdown_log.bcfg
etc/modemConfig/hua.cfg
etc/modemConfig/hids_ue_msg.cfg
etc/modemConfig/balong/FieldTest.cfg
etc/modemConfig/balong/basic_name

#init.manufacture.rc - edited since a few binaries didn't even exist in the origin rom  (5.0)
bin/atcmdserver
bin/diagserver
#bin/hwnffserver - we already got that in init.rc
bin/data_cleaner
etc/check_hota.sh

#init.platform.rc - edited since a few binaries didn't even exist in the origin rom   (5.0)
bin/preparesd.sh
bin/eventcat
bin/chargelogcat
bin/sleeplogcat
bin/modemlogcat_lte
bin/hw_cdmamodem_service
bin/thermal-daemon
bin/hwpged
bin/bastetd

#init.5844.rc - copied every config file not mentioned there  (5.0)
bin/HwCamCfgSvr
bin/chargemonitor
miniisp/TBM_Latour2.bin
miniisp/TBM_Latour.bin
miniisp/miniBoot2.bin
miniisp/miniBoot.bin
miniisp/chip_det.bin

#Not already listed and found in file_contexts
#bin/himreg
#bin/goldeneye
#bin/logserver
#bin/mappersh
#bin/do_ddrtest
#bin/secure_storage
#bin/check_longpress
#bin/jankservice
#bin/ioinfoservice
bin/gps4752logd	
bin/gpslogd
#bin/pmom_cat
#bin/audiouartctl

#Some vendor blobs - reported in logs
#Camera related
lib/libHWCamCfgSvr.so
lib64/libHWCamCfgSvr.so
lib/libjpegenchw.so
lib64/libjpegenchw.so
lib/libjpu.so
lib64/libjpu.so

#Audio related
lib/libaudioroute.so
lib64/libaudioroute.so
lib/libnvme.so
lib64/libnvme.so
lib/libtinyalsa.so
lib64/libtinyalsa.so


#Graphics related
lib/hw/hwcomposer.default.so
lib64/hw/hwcomposer.default.so
lib/hw/hwcomposer.hi3635.so
lib64/hw/hwcomposer.hi3635.so
lib/libion.so
lib64/libion.so


#oem
lib/liboeminfo.so
lib64/liboeminfo.so
lib/liboeminfo_jni.so
lib64/liboeminfo_jni.so


#Some vendor blobs seems that there is more in lib/hw lib64/hw than just the hwcomposer
lib64/hw/audio.a2dp.default.so
lib64/hw/audio.primary.hi3635.so
lib64/hw/audio.r_submix.default.so
lib64/hw/bastet.hi3635.so
lib64/hw/camera.hi3635.so
lib64/hw/copybit.hi3635.so
lib64/hw/flp.default.so
lib64/hw/gps4752.default.so
lib64/hw/gps47531.default.so
lib64/hw/gps47531cl.default.so
lib64/hw/gralloc.hi3635.so
lib64/hw/keystore.hi3635.so
lib64/hw/memtrack.hi3635.so
lib64/hw/nfc_nci.pn54x.default.so
lib64/hw/power.hi3635.so
lib64/hw/sensorhub.default.so
lib/hw/audio.a2dp.default.so
lib/hw/audio.primary.hi3635.so
lib/hw/audio.r_submix.default.so
lib/hw/camera.hi3635.so
lib/hw/copybit.hi3635.so
lib/hw/gralloc.hi3635.so
lib/hw/keystore.hi3635.so
lib/hw/lights.default.so
lib/hw/memtrack.hi3635.so
lib/hw/power.hi3635.so
lib/hw/sensorhub.default.so


#The drm stuff isnt included in cm
lib64/drm/libdrmhwomavoneplugin.so
lib/drm/libdrmhwomavoneplugin.so

#hwcam - GRACE (codename) stuff
lib64/hwcam/hwcam.hi3635.GRACE.s.ov8865.so
lib64/hwcam/hwcam.hi3635.GRACE.s.imx278_sunny.so
lib64/hwcam/hwcam.hi3635.GRACE.s.imx278_liteon.so
lib64/hwcam/hwcam.hi3635.GRACE.s.imx278_lg.so
lib64/hwcam/hwcam.hi3635.GRACE.s.imx278.so
lib64/hwcam/hwcam.hi3635.GRACE.s.imx214.so
lib64/hwcam/hwcam.hi3635.GRACE.s.imx179_udp.so
lib64/hwcam/hwcam.hi3635.GRACE.s.imx179.so
lib64/hwcam/hwcam.hi3635.GRACE.p.ov8865.so
lib64/hwcam/hwcam.hi3635.GRACE.p.imx278_sunny.so
lib64/hwcam/hwcam.hi3635.GRACE.p.imx278_liteon.so
lib64/hwcam/hwcam.hi3635.GRACE.p.imx278_lg.so
lib64/hwcam/hwcam.hi3635.GRACE.p.imx278.so
lib64/hwcam/hwcam.hi3635.GRACE.p.imx214.so
lib64/hwcam/hwcam.hi3635.GRACE.p.imx179_udp.so
lib64/hwcam/hwcam.hi3635.GRACE.p.imx179.so
lib64/hwcam/hwcam.ddt.so
lib/hwcam/hwcam.hi3635.m.GRACE.so
lib/hwcam/hwcam.hi3635.GRACE.s.ov8865.so
lib/hwcam/hwcam.hi3635.GRACE.s.imx278_sunny.so
lib/hwcam/hwcam.hi3635.GRACE.s.imx278_liteon.so
lib/hwcam/hwcam.hi3635.GRACE.s.imx278_lg.so
lib/hwcam/hwcam.hi3635.GRACE.s.imx278.so
lib/hwcam/hwcam.hi3635.GRACE.s.imx214.so
lib/hwcam/hwcam.hi3635.GRACE.s.imx179_udp.so
lib/hwcam/hwcam.hi3635.GRACE.s.imx179.so
lib/hwcam/hwcam.hi3635.GRACE.p.ov8865.so
lib/hwcam/hwcam.hi3635.GRACE.p.imx278_sunny.so
lib/hwcam/hwcam.hi3635.GRACE.p.imx278_liteon.so
lib/hwcam/hwcam.hi3635.GRACE.p.imx278_lg.so
lib/hwcam/hwcam.hi3635.GRACE.p.imx278.so
lib/hwcam/hwcam.hi3635.GRACE.p.imx214.so
lib/hwcam/hwcam.hi3635.GRACE.p.imx179_udp.so
lib/hwcam/hwcam.hi3635.GRACE.p.imx179.so
lib/hwcam/hwcam.ddt.so

#helix? no idea but its not included on cm
lib/helix/wmvrender.so
lib/helix/wmv9.so
lib/helix/wmv8.so
lib/helix/wmerender.so
lib/helix/wmarender.so
lib/helix/wmaA.so
lib/helix/wma9.so
lib/helix/wm9v.so
lib/helix/vidsite.so
lib/helix/vidplin.so
lib/helix/smplfsys.so
lib/helix/smlrender.so
lib/helix/smlfformat.so
lib/helix/sipr.so
lib/helix/rvrender.so
lib/helix/rv40.so
lib/helix/rv30.so
lib/helix/rv20.so
lib/helix/rtspfformat.so
lib/helix/rtspclnt.so
lib/helix/rn5auth.so
lib/helix/rmfformat.so
lib/helix/rarender.so
lib/helix/ramrender.so
lib/helix/ramfformat.so
lib/helix/ralf.so
lib/helix/raac.so
lib/helix/omxv.so
lib/helix/nullrend.so
lib/helix/hxxml.so
lib/helix/hxsdp.so
lib/helix/hxnetwksvc.so
lib/helix/hxmedplyeng.so
lib/helix/hxmedpltfm.so
lib/helix/hxltcolor.so
lib/helix/hxdtdriver.so
lib/helix/httplivefformat.so
lib/helix/httpfsys.so
lib/helix/dtdrplin.so
lib/helix/drvc.so
lib/helix/drv2.so
lib/helix/cvt1.so
lib/helix/cook.so
lib/helix/colorcvt.so
lib/helix/clntxres.so
lib/helix/authmgr.so
lib/helix/audplin.so
lib/helix/atrc.so
lib/helix/asxrender.so
lib/helix/asxff.so
lib/helix/asfff.so
lib/helix/aacdec2.so


#Vendor blobs... lets copy everything "huawei" related
lib/libstagefright.huawei.so
lib/libservices.huawei.so
lib/libmtp.huawei.so
lib/libmedia_jni.huawei.so
lib/libhuaweiprocessing.so
lib/libhuaweiaudioeffectutil.so
lib/libhuaweiaudioalgoservice.so
lib/libdrmbitmap.huawei.so
lib/libaudioflinger.huawei.so
lib64/libstagefright.huawei.so
lib64/libservices.huawei.so
lib64/libmtp.huawei.so
lib64/libmedia_jni.huawei.so
lib64/libhuaweigpsrpc.so
lib64/libdrmbitmap.huawei.so

#hi3635 stuff not yet included
etc/audio/algorithm/algorithm_hi3635cs_normal.xml
etc/audio/algorithm/algorithm_hi3635_normal.xml
etc/audio/dts/dts_hi3635cs_normal.xml
etc/audio/dts/dts_hi3635_normal.xml
etc/audio/hi6402/pop_seq_hi3635fpga.xml
etc/audio/hi6402/pop_seq_hi3635cs.xml
etc/audio/hi6402/pop_seq_hi3635.xml
etc/audio/hi6402/mixer_volumes_hi3635fpga_normal.xml
etc/audio/hi6402/mixer_volumes_hi3635cs_normal.xml
etc/audio/hi6402/mixer_volumes_hi3635_normal.xml
etc/audio/hi6402/mixer_paths_hi3635fpga.xml
etc/audio/hi6402/mixer_paths_hi3635cs.xml
etc/audio/hi6402/mixer_paths_hi3635.xml
etc/audio/maxim/maxim_hi3635cs_normal.xml
etc/audio/maxim/maxim_hi3635_normal.xml
etc/audio/mbdrc/mbdrc_hi3635cs_normal.xml
etc/audio/mbdrc/mbdrc_hi3635_normal.xml
etc/audio/modem/modem_hi3635cs_normal.xml
etc/audio/modem/modem_hi3635_normal.xml



#Let's debug the surfaceflinger until it runs
lib/libion.so
lib64/libion.so
lib/hw/gralloc.hi3635.so
lib64/hw/gralloc.hi3635.so
lib/hw/gralloc.default.so
lib64/hw/gralloc.default.so
lib/hw/hwcomposer.hi3635.so
lib64/hw/hwcomposer.hi3635.so
lib/hw/hwcomposer.default.so
lib64/hw/hwcomposer.default.so
lib/libgralloc_ext.default.so
lib64/libgralloc_ext.default.so
lib/libhwaps.so
lib64/libhwaps.so
lib64/libsurfaceflinger.so
lib/libsurfaceflinger.so
#-->_ZN7android12DisplayUtils13getSFInstanceEv ref by bin/surfaceflinger
bin/surfaceflinger
#--> _ZN7android26DISPLAY_SIZE_DENSITY_VALUEE ref by lib64/surfaceflinger.so
lib/libgui.so
lib64/libgui.so
#--> __android_janklog_print ref by lib64/surfaceflinger.so
lib/liblog.so
lib64/liblog.so
# nice at least for now
# 01-26 02:11:57.355  3779  3779 E BufferQueueProducer: [FramebufferSurface] dequeueBuffer: can't dequeue multiple buffers without setting the buffer count
# 01-26 02:11:57.355  3779  3779 F SurfaceFlinger: eglSwapBuffers(0x1, 0x7fa53fefc0) failed with 0x0000300d
# 01-26 02:11:57.355  3779  3779 F libc    : Fatal signal 6 (SIGABRT), code -6 in tid 3779 (surfaceflinger)
# 01-26 02:11:57.355  3779  3779 F libc    : Unable to open connection to debuggerd: Connection refused
# 01-26 02:11:57.379  3845  3862 E         : mali gles error info : 3, error: 6
# 01-26 02:09:05.240 20544 20547 D graphic : #00 pc 0000000000430ed8  /system/vendor/lib64/egl/libGLES_mali.so
# 01-26 02:09:05.240 20544 20547 D graphic : #01 pc 00000000006669d4  /system/vendor/lib64/egl/libGLES_mali.so
# 01-26 02:09:05.240 20544 20547 D graphic : #02 pc 000000000062ee34  /system/vendor/lib64/egl/libGLES_mali.so
# 01-26 02:09:05.240 20544 20547 D graphic : #03 pc 0000000000625f24  /system/vendor/lib64/egl/libGLES_mali.so
# 01-26 02:09:05.240 20544 20547 D graphic : #04 pc 0000000000008ba4  /system/bin/bootanimation
# 01-26 02:09:05.240 20544 20547 D graphic : #05 pc 0000000000008ed0  /system/bin/bootanimation
# 01-26 02:09:05.240 20544 20547 D graphic : #06 pc 0000000000015854  /system/lib64/libutils.so (_ZN7android6Thread11_threadLoopEPv+208)
# 01-26 02:09:05.240 20544 20547 D graphic : #07 pc 00000000000150a4  /system/lib64/libutils.so
# 01-26 02:09:05.240 20544 20547 D graphic : #08 pc 0000000000065bc4  /system/lib64/libc.so (_ZL15__pthread_startPv+52)
# 01-26 02:09:05.240 20544 20547 D graphic : #09 pc 000000000001e794  /system/lib64/libc.so (__start_thread+16)
# 01-26 02:09:05.268  2822  2822 I ServiceManager: service 'SurfaceFlinger' died
# 01-26 02:09:05.269 20544 20547 E         : mali gles error info : 3, error: 6
#-->aborted on exec
# Let's copy these (got them listed by using readelf)
#
#Edit - these two may be not required since the cause was the not defined buffer count
lib/libGLESv2.so
lib64/libGLESv2.so
# library "libhwgl.so" not found & page records not found
# geee...
lib/libhwgl.so
lib64/libhwgl.so
#and errors again but it looks not that bad
# 01-26 02:18:06.362 25587 25587 D SurfaceFlinger: SurfaceFlinger::init  level 0
# 01-26 02:18:06.393 25587 25587 D libEGL  : loaded /vendor/lib64/egl/libGLES_mali.so
# 01-26 02:18:06.406 25587 25587 I [Gralloc]: gralloc_prealloc_thread_init in pid 25587
# 01-26 02:18:06.406 25587 25587 I [Gralloc]: gralloc_free_thread_init out pid 25587
# 01-26 02:18:06.407 25587 25604 I [Gralloc]: alloc w[1080] h[1920] format[1] usage[3]
# 01-26 02:18:06.409 25587 25604 I [Gralloc]: alloc succ handle[0x7f7c550000] stride[1120]
# 01-26 02:18:06.713 25587 25587 I [Gralloc]: using (fd=12)
# 01-26 02:18:06.713 25587 25587 I [Gralloc]: id           = hisifb0
# 01-26 02:18:06.713 25587 25587 I [Gralloc]: xres         = 1080 px
# 01-26 02:18:06.713 25587 25587 I [Gralloc]: yres         = 1920 px
# 01-26 02:18:06.713 25587 25587 I [Gralloc]: xres_virtual = 1080 px
# 01-26 02:18:06.713 25587 25587 I [Gralloc]: yres_virtual = 5760 px
# 01-26 02:18:06.713 25587 25587 I [Gralloc]: bpp          = 16
# 01-26 02:18:06.713 25587 25587 I [Gralloc]: r            = 11:5
# 01-26 02:18:06.713 25587 25587 I [Gralloc]: g            =  5:6
# 01-26 02:18:06.713 25587 25587 I [Gralloc]: b            =  0:5
# 01-26 02:18:06.713 25587 25587 I [Gralloc]: width        = 65 mm (422.030762 dpi)
# 01-26 02:18:06.713 25587 25587 I [Gralloc]: height       = 115 mm (424.069580 dpi)
# 01-26 02:18:06.713 25587 25587 I [Gralloc]: refresh rate = 60.00 Hz
# 01-26 02:18:06.716 25587 25587 I SurfaceFlinger: Using composer version 1.4
# 01-26 02:18:06.716 25587 25587 I SurfaceFlinger: EGL information:
# 01-26 02:18:06.716 25587 25587 I SurfaceFlinger: vendor    : Android
# 01-26 02:18:06.716 25587 25587 I SurfaceFlinger: version   : 1.4 Android META-EGL
# 01-26 02:18:06.716 25587 25587 I SurfaceFlinger: extensions: EGL_KHR_get_all_proc_addresses EGL_ANDROID_presentation_time EGL_KHR_swap_buffers_with_damage EGL_KHR_image EGL_KHR_image_base EGL_KH
# R_gl_texture_2D_image EGL_KHR_gl_texture_cubemap_image EGL_KHR_gl_renderbuffer_image EGL_KHR_fence_sync EGL_KHR_create_context EGL_KHR_config_attribs EGL_KHR_surfaceless_context EGL_EXT_create_c
# ontext_robustness EGL_ANDROID_image_native_buffer EGL_KHR_wait_sync EGL_ANDROID_recordable EGL_KHR_partial_update
# 01-26 02:18:06.716 25587 25587 I SurfaceFlinger: Client API: OpenGL_ES
# 01-26 02:18:06.716 25587 25587 I SurfaceFlinger: EGLSurface: 8-8-8-8, config=0x7f7ac5b220
# 01-26 02:18:06.720 25587 25587 I SurfaceFlinger: OpenGL ES informations:
# 01-26 02:18:06.720 25587 25587 I SurfaceFlinger: vendor    : ARM
# 01-26 02:18:06.720 25587 25587 I SurfaceFlinger: renderer  : Mali-T624
# 01-26 02:18:06.720 25587 25587 I SurfaceFlinger: version   : OpenGL ES 3.1 v1.r8p0-01dev0.4078cee201ea91f87ad24a89593523d2
# 01-26 02:18:06.720 25587 25587 I SurfaceFlinger: extensions: GL_EXT_debug_marker GL_ARM_rgba8 GL_ARM_mali_shader_binary GL_OES_depth24 GL_OES_depth_texture GL_OES_depth_texture_cube_map GL_OES_p
# acked_depth_stencil GL_OES_rgb8_rgba8 GL_EXT_read_format_bgra GL_OES_compressed_paletted_texture GL_OES_compressed_ETC1_RGB8_texture GL_OES_standard_derivatives GL_OES_EGL_image GL_OES_EGL_image
# _external GL_OES_EGL_sync GL_OES_texture_npot GL_OES_vertex_half_float GL_OES_required_internalformat GL_OES_vertex_array_object GL_OES_mapbuffer GL_EXT_texture_format_BGRA8888 GL_EXT_texture_rg
#  GL_EXT_texture_type_2_10_10_10_REV GL_OES_fbo_render_mipmap GL_OES_element_index_uint GL_OES_texture_compression_astc GL_KHR_texture_compression_astc_ldr GL_KHR_texture_compression_astc_hdr GL_
# KHR_debug GL_EXT_occlusion_query_boolean GL_EXT_disjoint_timer_query GL_EXT_blend_minmax GL_EXT_discard_framebuffer GL_OES_get_program_binary GL_OES_texture_3D GL_EXT_texture_storage GL_EXT_mult
# isampled_render_to_texture GL_OES_surfaceless_context GL_OES_texture_stencil8 GL_EXT_shader_pixel_loca
# 01-26 02:18:06.720 25587 25587 I SurfaceFlinger: GL_MAX_TEXTURE_SIZE = 8192
# 01-26 02:18:06.720 25587 25587 I SurfaceFlinger: GL_MAX_VIEWPORT_DIMS = 8192
# 01-26 02:18:06.720 25587 25587 D mali_winsys: new_window_surface returns 0x3000
# 01-26 02:18:06.721 25587 25587 I [Gralloc]: gralloc_prealloc_thread_init in pid 25587
# 01-26 02:18:06.721 25587 25587 I [Gralloc]: alloc w[1080] h[1920] format[1] usage[6656]
# 01-26 02:18:06.721 25587 25587 I [Gralloc]: alloc succ handle[0x7f7c582620] stride[1120]
# 01-26 02:18:06.721 25587 25587 I [Gralloc]: alloc w[1080] h[1920] format[1] usage[6656]
# 01-26 02:18:06.721 25587 25587 E ion     : ioctl fd 11 c0204900(ION_IOC_ALLOC) failed with code -1: Out of memory
# 01-26 02:18:06.721 25587 25587 E ion     : ion_alloc:  heap_mask: 0x4, flags: 0x4
# 01-26 02:18:06.721 25587 25587 E [Gralloc-ERROR]: int alloc_backend_alloc(alloc_device_t*, int, int, size_t, int, const native_handle_t**):96 Failed to ion_alloc from ion_client:11
# 01-26 02:18:06.721 25587 25587 W GraphicBufferAllocator: alloc(1080, 1920, 1, 00001a00, ...) failed -1 (Operation not permitted)
# 01-26 02:18:06.721 25587 25587 E         : GraphicBufferAlloc::createGraphicBuffer(w=1080, h=1920) failed (Operation not permitted), handle=0x0
# 01-26 02:18:06.721 25587 25587 E BufferQueueProducer: [FramebufferSurface] allocateBuffers: failed to allocate buffer (1080 x 1920, format 1, usage 0)
# 01-26 02:18:06.726 25587 25587 D SurfaceFlinger: Set power mode=2, type=0 flinger=0x7f7ca43c00
# 01-26 02:18:06.864 25587 25588 E SurfaceFlinger: ro.sf.lcd_density must be defined as a build property
# 01-26 02:18:07.162 25612 25615 D libEGL  : loaded /vendor/lib64/egl/libGLES_mali.so
# 01-26 02:18:07.181 25612 25615 D mali_winsys: new_window_surface returns 0x3000
# 01-26 02:18:07.186 25612 25615 E BootAnimation: couldn't find audio_conf.txt
# 01-26 02:18:07.188 25612 25615 D BootAnimation: Use save memory method, maybe small fps in actual.
# 01-26 02:18:07.198 25587 25588 I [Gralloc]: alloc w[1080] h[1920] format[2] usage[2816]
# 01-26 02:18:07.201 25587 25588 I [Gralloc]: alloc succ handle[0x7f7c550380] stride[1120]
# 01-26 02:18:07.203 25612 25615 E         : mali gles error info : 1, error: 6
# 01-26 02:18:07.211 25612 25615 D graphic : #00 pc 0000000000430ed8  /system/vendor/lib64/egl/libGLES_mali.so
# 01-26 02:18:07.211 25612 25615 D graphic : #01 pc 00000000006669d4  /system/vendor/lib64/egl/libGLES_mali.so
# 01-26 02:18:07.211 25612 25615 D graphic : #02 pc 0000000000635d38  /system/vendor/lib64/egl/libGLES_mali.so
# 01-26 02:18:07.211 25612 25615 D graphic : #03 pc 0000000000635dec  /system/vendor/lib64/egl/libGLES_mali.so
# 01-26 02:18:07.211 25612 25615 D graphic : #04 pc 00000000006347a4  /system/vendor/lib64/egl/libGLES_mali.so
# 01-26 02:18:07.211 25612 25615 D graphic : #05 pc 0000000000633684  /system/vendor/lib64/egl/libGLES_mali.so
# 01-26 02:18:07.211 25612 25615 D graphic : #06 pc 0000000000008b6c  /system/bin/bootanimation
# 01-26 02:18:07.211 25612 25615 D graphic : #07 pc 0000000000008ed0  /system/bin/bootanimation
# 01-26 02:18:07.211 25612 25615 D graphic : #08 pc 0000000000015854  /system/lib64/libutils.so (_ZN7android6Thread11_threadLoopEPv+208)
# 01-26 02:18:07.211 25612 25615 D graphic : #09 pc 00000000000150a4  /system/lib64/libutils.so
# 01-26 02:18:07.211 25612 25615 D graphic : #10 pc 0000000000065bc4  /system/lib64/libc.so (_ZL15__pthread_startPv+52)
# 01-26 02:18:07.211 25612 25615 D graphic : #11 pc 000000000001e794  /system/lib64/libc.so (__start_thread+16)
# --> abort on exec
#
# SurfaceFlinger: ro.sf.lcd_density must be defined as a build property ok lets do this 
# k. ro.sf.lcd_density=480
#
# almost the same but hey it complains: BootAnimation: couldn't find audio_conf.txt
# k. well it doesn't exist i will ignore it for now
#
# ... These ion complains (libion.so?) I will just use readelf once.... f** ok that can't be the issue
# But it complains out of memory that can't be that hard... Some kernel messages:
# 
# <3>[ 1472.749114s][2011:01:26 02:49:36][pid:28654,cpu7,surfaceflinger]ION ION.C   ion_buffer_create: allocate first time failed.
# <3>[ 1472.749145s][2011:01:26 02:49:36][pid:28654,cpu7,surfaceflinger]ION ION.C   ion_buffer_create: allocate second time failed!
# <3>[ 1472.749145s][2011:01:26 02:49:36][pid:28654,cpu7,surfaceflinger]ION ION.C   ion_buffer_create: failed!
# <3>[ 1472.749176s][2011:01:26 02:49:36][pid:28654,cpu7,surfaceflinger]ION ION.C   ion_alloc: ion buffer create error! buffer: -12
# <3>[ 1472.749176s][2011:01:26 02:49:36][pid:28654,cpu7,surfaceflinger]ION ION.C   ion_ioctl: ion alloc failed! len: 834000, align: 0, heap_id_mask: 4, flags: 4
# <6>[ 1472.751342s][2011:01:26 02:49:36][pid:28654,cpu7,surfaceflinger][I/TS] fb_notifier_callback, blank: 0, event:16, state: 2
# <3>[ 1473.244201s][2011:01:26 02:49:36][pid:28686,cpu0,BootAnimation]mali gpufreq: Wrong syscall size (48) for 00000201
# <3>[ 1473.262908s][2011:01:26 02:49:36][pid:28686,cpu0,BootAnimation]mali gpufreq: Wrong syscall size (48) for 00000201
# <3>[ 1473.281799s][2011:01:26 02:49:36][pid:28686,cpu0,BootAnimation]mali gpufreq: Wrong syscall size (48) for 00000201
# <3>[ 1473.314575s][2011:01:26 02:49:36][pid:28686,cpu0,BootAnimation]mali gpufreq: Wrong syscall size (48) for 00000201
# <3>[ 1473.349304s][2011:01:26 02:49:36][pid:28686,cpu0,BootAnimation]binder: 28654: binder_alloc_buf, no vma
# <6>[ 1473.349334s][2011:01:26 02:49:36][pid:28686,cpu0,BootAnimation]binder: 28683:28686 transaction failed 29201, size 100-0
# <3>[ 1473.380981s][2011:01:26 02:49:36][pid:28686,cpu0,BootAnimation]binder: 28654: binder_alloc_buf, no vma
# <6>[ 1473.381011s][2011:01:26 02:49:36][pid:28686,cpu0,BootAnimation]binder: 28683:28686 transaction failed 29201, size 100-0
# 
# I forgot to include the part in the catlog logs which told me that it isn't able to allocate something without setting the buffer count
# or something like this.. I don't remember exactly. However I though about where to define them. The most obvious location
# for me is build.props. so I included the stuff mentioned as hi3635 from the stock rom in build.props:
#
# ro.config.mmu_en=1
# dalvik.vm.heapsize=256m
# ro.opengles.version=196609
# ro.sf.lcd_density=480
# hw.lcd.density=480
# sys.config.jankenable=true
# persist.sys.strictmode.disable=true
# ro.bt.bdaddr_path=/data/misc/bluedroid/macbt
# ro.config.keypasstouser=true
# ro.config.hw_navigationbar=true
# ro.config.hw_sensorhub=true
# ro.balong_debug.port_num=8
# ro.product.platform.pseudonym=1ARB9CV
# ro.hwui.texture_cache_size=48
# ro.hwui.texture_cache_flushrate=0.4
# ro.hwui.layer_cache_size=48
# ro.hwui.path_cache_size=32
# ro.hwui.shape_cache_size=2
# ro.hwui.drop_shadow_cache_size=6
# ro.hwui.gradient_cache_size=1
# ro.hwui.text_large_cache_height=1024
# ro.hwui.text_large_cache_width=2048
# ro.hwui.text_small_cache_height=1024
# ro.hwui.text_small_cache_width=1024
# ro.hwui.r_buffer_cache_size=8
# debug.hwui.render_dirty_regions=false
# sys.refresh.dirty=1
# ro.config.hw_music_lp=true
# keyguard.no_require_sim=true
# hw.enterinto.imm_chat.scene=false
# bastet.service.enable=true
# ro.config.hw_emerg=on
# ro.sys.umsdirtyratio=2
# ro.product.cpuinfo.normal=Hisilicon Kirin 930
# ro.product.cpuinfo.high=Hisilicon Kirin 935
# ro.product.cpuinfo.highhigh=Hisilicon Kirin 935
# 
# 
# and hey now I only get these errors left:
#
# mali gles error info : 1, error: 6
# ...
# 01-26 21:40:44.944 19343 19343 F SurfaceFlinger: eglSwapBuffers(0x1, 0x7f9687efc0) failed with 0x00003003
# 01-26 21:40:44.944 19343 19343 F libc    : Fatal signal 6 (SIGABRT), code -6 in tid 19343 (surfaceflinger)
# 01-26 21:40:44.944 19343 19343 F libc    : Unable to open connection to debuggerd: Connection refused
# --> (kmesg related? from Bootanimation) binder: 21855: binder_alloc_buf, no vma
# ...
# mali gles error info : 3, error: 6
# --> (kmesg related?) mali gpufreq: Wrong syscall size (48) for 00000201
# 
# this syscall resolves to kbase_uk_mem_import and lives in mali_kbase_uku.h
# well I guess I better should have taken the original source from mali. Instead of honor 8
# so let's try with the mali driver in here: 
# https://github.com/olrak2/android_kernel_huawei_hi6210sft/tree/android-6.0/drivers/gpu/arm
#
# f*** yea it works! I have the cm bootanimation on the screen!
#

#let's debug the bootprocess
#It seems that it cannot start because of basted service
#--> libbastet.so not found
lib64/libbastet.so


#hm nothing... let's debug zygote
#cm13:cannot locate symbol "_ZN7android14SurfaceControl25setBlurMaskAlphaThresholdEf" referenced by "/system/lib64/libandroid_runtime.so"
#I remember that I got it running before...
#that's what readelf says from the built one:
#  0x0000000000000001 (NEEDED)             Shared library: [libmemtrack.so]
#  0x0000000000000001 (NEEDED)             Shared library: [libandroidfw.so]
#  0x0000000000000001 (NEEDED)             Shared library: [libexpat.so]
#  0x0000000000000001 (NEEDED)             Shared library: [libnativehelper.so]
#  0x0000000000000001 (NEEDED)             Shared library: [liblog.so]
#  0x0000000000000001 (NEEDED)             Shared library: [libcutils.so]
#  0x0000000000000001 (NEEDED)             Shared library: [libutils.so]
#  0x0000000000000001 (NEEDED)             Shared library: [libbinder.so]
#  0x0000000000000001 (NEEDED)             Shared library: [libnetutils.so]
#  0x0000000000000001 (NEEDED)             Shared library: [libui.so]
#  0x0000000000000001 (NEEDED)             Shared library: [libgui.so]
#  0x0000000000000001 (NEEDED)             Shared library: [libinput.so]
#  0x0000000000000001 (NEEDED)             Shared library: [libinputflinger.so]
#  0x0000000000000001 (NEEDED)             Shared library: [libcamera_client.so]
#  0x0000000000000001 (NEEDED)             Shared library: [libcamera_metadata.so]
#  0x0000000000000001 (NEEDED)             Shared library: [libskia.so]
#  0x0000000000000001 (NEEDED)             Shared library: [libsqlite.so]
#  0x0000000000000001 (NEEDED)             Shared library: [libEGL.so]
#  0x0000000000000001 (NEEDED)             Shared library: [libGLESv1_CM.so]
#  0x0000000000000001 (NEEDED)             Shared library: [libGLESv2.so]
#  0x0000000000000001 (NEEDED)             Shared library: [libETC1.so]
#  0x0000000000000001 (NEEDED)             Shared library: [libhardware.so]
#  0x0000000000000001 (NEEDED)             Shared library: [libhardware_legacy.so]
#  0x0000000000000001 (NEEDED)             Shared library: [libselinux.so]
#  0x0000000000000001 (NEEDED)             Shared library: [libsonivox.so]
#  0x0000000000000001 (NEEDED)             Shared library: [libcrypto.so]
#  0x0000000000000001 (NEEDED)             Shared library: [libssl.so]
#  0x0000000000000001 (NEEDED)             Shared library: [libicuuc.so]
#  0x0000000000000001 (NEEDED)             Shared library: [libicui18n.so]
#  0x0000000000000001 (NEEDED)             Shared library: [libmedia.so]
#  0x0000000000000001 (NEEDED)             Shared library: [libjpeg.so]
#  0x0000000000000001 (NEEDED)             Shared library: [libusbhost.so]
#  0x0000000000000001 (NEEDED)             Shared library: [libharfbuzz_ng.so]
#  0x0000000000000001 (NEEDED)             Shared library: [libz.so]
#  0x0000000000000001 (NEEDED)             Shared library: [libaudioutils.so]
#  0x0000000000000001 (NEEDED)             Shared library: [libpdfium.so]
#  0x0000000000000001 (NEEDED)             Shared library: [libimg_utils.so]
#  0x0000000000000001 (NEEDED)             Shared library: [libnetd_client.so]
#  0x0000000000000001 (NEEDED)             Shared library: [libradio.so]
#  0x0000000000000001 (NEEDED)             Shared library: [libsoundtrigger.so]
#  0x0000000000000001 (NEEDED)             Shared library: [libminikin.so]
#  0x0000000000000001 (NEEDED)             Shared library: [libprocessgroup.so]
#  0x0000000000000001 (NEEDED)             Shared library: [libnativebridge.so]
#  0x0000000000000001 (NEEDED)             Shared library: [libradio_metadata.so]
#  0x0000000000000001 (NEEDED)             Shared library: [libhwui.so]
#  0x0000000000000001 (NEEDED)             Shared library: [libdl.so]
#  0x0000000000000001 (NEEDED)             Shared library: [libc++.so]
#  0x0000000000000001 (NEEDED)             Shared library: [libc.so]
#  0x0000000000000001 (NEEDED)             Shared library: [libm.so]
#  0x000000000000000e (SONAME)             Library soname: [libandroid_runtime.so]
#
#
# When it worked before it was eighter some old file from 5.0 rom or one of those I copied
# I did a complete rebuild with only 6.0 vendor files and get still the same result, so 
# I guess it's case 2.
#
# ok libgui.so is the issue here.. the reson to include it was to get surfaceflinger running
# surfaceflinger however only works together with the vendor hwcomposer and this specific verison requires this libgui... f*** off.
# I can only try to fix it's dependencies
#
# vendor libgui.so
# 0x0000000000000001 (NEEDED)             Shared library: [libbinder.so]
# 0x0000000000000001 (NEEDED)             Shared library: [libcutils.so]
# 0x0000000000000001 (NEEDED)             Shared library: [libEGL.so]
# 0x0000000000000001 (NEEDED)             Shared library: [libGLESv2.so]
# 0x0000000000000001 (NEEDED)             Shared library: [libsync.so]
# 0x0000000000000001 (NEEDED)             Shared library: [libui.so]
# 0x0000000000000001 (NEEDED)             Shared library: [libutils.so]
# 0x0000000000000001 (NEEDED)             Shared library: [liblog.so]
# 0x0000000000000001 (NEEDED)             Shared library: [libdl.so]
# 0x0000000000000001 (NEEDED)             Shared library: [libc++.so]
# 0x0000000000000001 (NEEDED)             Shared library: [libc.so]
# 0x0000000000000001 (NEEDED)             Shared library: [libm.so]
# 0x000000000000000e (SONAME)             Library soname: [libgui.so]
#
# or I use the vendor libandroid_runtime.so
lib/libandroid_runtime.so
lib64/libandroid_runtime.so
lib/libhwextdevice.so
lib64/libhwextdevice.so
lib/libperfhub_client.so
lib64/libperfhub_client.so
lib/lib_oeminfo_interface.so
lib64/lib_oeminfo_interface.so
#cannot locate symbol "_ZNK7android8ResTable12getBagLockedEjPPKNS0_9bag_entryEPj" referenced by "/system/lib64/libandroid_runtime.so"..
#grep says it's in libandroidfw.so
lib/libandroidfw.so
lib64/libandroidfw.so
#cannot locate symbol "_ZN7android8KeyEvent10initializeEiiiiiiiiill" referenced by "/system/lib64/libandroid_runtime.so"
#grep says it's in libinput.so
lib/libinput.so
lib64/libinput.so
#cannot locate symbol "_ZN7android17MediaLogException12forceLogSendEi" referenced by "/system/lib64/libandroid_runtime.so"
#grep says it's in libmedia.so
lib/libmedia.so
lib64/libmedia.so
#cannot locate symbol "_ZN7android10Hyphenator4loadEPKtm" referenced by "/system/lib64/libandroid_runtime.so"
#I'm fine but the rom will hate me probably
#grep says it's in libminikin.so
lib/libminikin.so
lib64/libminikin.so
#cannot locate symbol "_ZN7android10PostCamera6unlockEv" referenced by "/system/lib64/libandroid_runtime.so"...
#gee
#grep says it's in libcamera_client.so
lib/libcamera_client.so
lib64/libcamera_client.so
#cannot locate symbol "_ZNK7android15KeyCharacterMap11tryRemapKeyEiiPiS1_" referenced by "/system/lib64/libinputflinger.so"
#Not you as well pls
#Well this one is not in the vendor files what states that i've overriden something...
#so let's override this as well
lib/libinputflinger.so
lib64/libinputflinger.so
#cannot locate symbol "_ZN7android21ICameraRecordingProxy20getCommonBaseAddressEv" referenced by "/system/lib64/libstagefright.so"...
#same case here
lib/libstagefright.so
lib64/libstagefright.so
#library "lib_k3_ffmpeg.so" not found
#oh well
lib/lib_k3_ffmpeg.so
lib64/lib_k3_ffmpeg.so
#cannot locate symbol "_ZN7android10DataSource13CreateFromURIERKNS_2spINS_17IMediaHTTPServiceEEEPKcPKNS_11KeyedVectorINS_7String8ES9_EEPS9_PNS_8HTTPBaseEb" referenced by "/system/lib64/libwilhelm.so"...
#not in vendor stuff bye libwilhelm.so
lib/libwilhelm.so
lib64/libwilhelm.so
#f*** yes :) at least for the moment
#
#
# 01-27 22:04:08.390  3064  3064 D AndroidRuntime: >>>>>> START com.android.internal.os.ZygoteInit uid 0 <<<<<<
# 01-27 22:04:08.411  3064  3064 D AndroidRuntime: CheckJNI is ON
# 01-27 22:04:08.411  3064  3064 I AndroidRuntime: readDownloadBoosterConfig: 'false'
# 01-27 22:04:08.420  3064  3064 I art     : option[0]=-Xzygote
# 01-27 22:04:08.420  3064  3064 I art     : option[1]=-Xcheck:jni
# 01-27 22:04:08.420  3064  3064 I art     : option[2]=-Xstacktracefile:/data/anr/traces.txt
# 01-27 22:04:08.420  3064  3064 I art     : option[3]=exit
# 01-27 22:04:08.420  3064  3064 I art     : option[4]=vfprintf
# 01-27 22:04:08.420  3064  3064 I art     : option[5]=sensitiveThread
# 01-27 22:04:08.420  3064  3064 I art     : option[6]=-verbose:gc
# 01-27 22:04:08.420  3064  3064 I art     : option[7]=-Xms4m
# 01-27 22:04:08.420  3064  3064 I art     : option[8]=-Xmx256m
# 01-27 22:04:08.420  3064  3064 I art     : option[9]=-Xusejit:true
# 01-27 22:04:08.420  3064  3064 I art     : option[10]=-agentlib:jdwp=transport=dt_android_adb,suspend=n,server=y
# 01-27 22:04:08.420  3064  3064 I art     : option[11]=-Xlockprofthreshold:500
# 01-27 22:04:08.420  3064  3064 I art     : option[12]=-Ximage-compiler-option
# 01-27 22:04:08.420  3064  3064 I art     : option[13]=--runtime-arg
# 01-27 22:04:08.420  3064  3064 I art     : option[14]=-Ximage-compiler-option
# 01-27 22:04:08.420  3064  3064 I art     : option[15]=-Xms64m
# 01-27 22:04:08.420  3064  3064 I art     : option[16]=-Ximage-compiler-option
# 01-27 22:04:08.420  3064  3064 I art     : option[17]=--runtime-arg
# 01-27 22:04:08.420  3064  3064 I art     : option[18]=-Ximage-compiler-option
# 01-27 22:04:08.420  3064  3064 I art     : option[19]=-Xmx64m
# 01-27 22:04:08.420  3064  3064 I art     : option[20]=-Ximage-compiler-option
# 01-27 22:04:08.420  3064  3064 I art     : option[21]=--compiler-filter=verify-at-runtime
# 01-27 22:04:08.420  3064  3064 I art     : option[22]=-Ximage-compiler-option
# 01-27 22:04:08.420  3064  3064 I art     : option[23]=--image-classes=/system/etc/preloaded-classes
# 01-27 22:04:08.420  3064  3064 I art     : option[24]=-Xcompiler-option
# 01-27 22:04:08.420  3064  3064 I art     : option[25]=--runtime-arg
# 01-27 22:04:08.420  3064  3064 I art     : option[26]=-Xcompiler-option
# 01-27 22:04:08.420  3064  3064 I art     : option[27]=-Xms64m
# 01-27 22:04:08.420  3064  3064 I art     : option[28]=-Xcompiler-option
# 01-27 22:04:08.420  3064  3064 I art     : option[29]=--runtime-arg
# 01-27 22:04:08.420  3064  3064 I art     : option[30]=-Xcompiler-option
# 01-27 22:04:08.420  3064  3064 I art     : option[31]=-Xmx512m
# 01-27 22:04:08.420  3064  3064 I art     : option[32]=-Xcompiler-option
# 01-27 22:04:08.420  3064  3064 I art     : option[33]=--compiler-filter=verify-at-runtime
# 01-27 22:04:08.420  3064  3064 I art     : option[34]=-Ximage-compiler-option
# 01-27 22:04:08.420  3064  3064 I art     : option[35]=--instruction-set-variant=cortex-a53
# 01-27 22:04:08.420  3064  3064 I art     : option[36]=-Xcompiler-option
# 01-27 22:04:08.420  3064  3064 I art     : option[37]=--instruction-set-variant=cortex-a53
# 01-27 22:04:08.420  3064  3064 I art     : option[38]=-Ximage-compiler-option
# 01-27 22:04:08.420  3064  3064 I art     : option[39]=--instruction-set-features=default
# 01-27 22:04:08.420  3064  3064 I art     : option[40]=-Xcompiler-option
# 01-27 22:04:08.420  3064  3064 I art     : option[41]=--instruction-set-features=default
# 01-27 22:04:08.420  3064  3064 I art     : option[42]=-Duser.locale=en-US
# 01-27 22:04:08.420  3064  3064 I art     : option[43]=--cpu-abilist=arm64-v8a,armeabi-v7a,armeabi
# 01-27 22:04:08.420  3064  3064 I art     : option[44]=-Xfingerprint:huawei/cm_hwgra/hwgra:6.0.1/MOB30Z/f0dea4cace:eng/debug,test-keys
# 01-27 22:04:08.657  3064  3064 D ICU     : No timezone override file found: /data/misc/zoneinfo/current/icu/icu_tzdata.dat
# 01-27 22:04:08.752  3064  3064 W art     : Failed to mount tmpfs to /storage/emulated
# 01-27 22:04:08.753  3064  3064 W art     : CreateJavaVM failed
# 01-27 22:04:08.753  3064  3064 E AndroidRuntime: JNI_CreateJavaVM failed
#
# well it doesn't come up at boot when not starting it manually 
# but now it complains Asset path /system/framework/framework-res-hwext.apk is neither a directory nor file (type=1).
framework/framework-res-hwext.apk
# a few more
# 01-27 22:40:51.604  2921  2921 W dex2oat : Skipping non-existent dex file '/system/framework/mms-common.jar'
# 01-27 22:40:51.604  2921  2921 W dex2oat : Skipping non-existent dex file '/system/framework/android.policy.jar'
# 01-27 22:40:51.604  2921  2921 W dex2oat : Failed to open .dex from file '/system/framework/hwEmui.jar': Entry not found
# 01-27 22:40:51.604  2921  2921 W dex2oat : Skipping non-existent dex file '/system/framework/hwTelephonycommon.jar'
# 01-27 22:40:51.604  2921  2921 W dex2oat : Skipping non-existent dex file '/system/framework/hwAndroid.policy.jar'
# 01-27 22:40:51.605  2921  2921 W dex2oat : Failed to open .dex from file '/system/framework/hwframework.jar': Entry not found
# 01-27 22:40:51.605  2921  2921 W dex2oat : Failed to open .dex from file '/system/framework/hwcustframework.jar': Entry not found
# 01-27 22:40:51.605  2921  2921 W dex2oat : Skipping non-existent dex file '/system/framework/hwcustTelephonycommon.jar'
# 01-27 22:40:51.605  2921  2921 W dex2oat : Skipping non-existent dex file '/system/framework/hwcustAndroid.policy.jar'
# 01-27 22:40:51.605  2921  2921 W dex2oat : Failed to open .dex from file '/system/framework/org.simalliance.openmobileapi.jar': Entry not found
# 01-27 22:40:51.605  2921  2921 W dex2oat : Failed to open .dex from file '/system/framework/hwaps.jar': Entry not found
# 
# Oh I see I didn't updated the ramdisk for 6.0 my bad
# but I'm still stuck with nothing more.

# Ok I'm sick of it; packed a new ramdisk from 6.0
# doesn't contain the selinux stuff yet but it's permissive anyway
# --> hey that looks amazing :)
#... have to stop for today
# Back again now I get some more errors

#Thermal-Daemon: parsing configure file result: failed
etc/thermald.xml
etc/thermald_performance.xml

#Have to investigate later
#ImagingSystem: failed to dlopen(/system/lib/hwcam/hwcam.hi3635.m.GRACE.so)!
#ImagingSystem: hw::CNoAddRefRelease4T<T>* hw::CIntfPtrBase<T>::operator->() const [with T = hw::IImagingSystem; hw::CIntfPtrBase<T>::_TPtrNoAddRefRelease = hw::CNoAddRefRelease4T<hw::IImagingSystem>*]: SHOULD NOT BE NULL!
#  0x00000001 (NEEDED)                     Shared library: [libdl.so]
#  0x00000001 (NEEDED)                     Shared library: [liblog.so]
#  0x00000001 (NEEDED)                     Shared library: [libcutils.so]
#  0x00000001 (NEEDED)                     Shared library: [libutils.so]
#  0x00000001 (NEEDED)                     Shared library: [libui.so]
#  0x00000001 (NEEDED)                     Shared library: [libmemtrack.so]
#  0x00000001 (NEEDED)                     Shared library: [libcamera_metadata.so]
#  0x00000001 (NEEDED)                     Shared library: [libjpegenchw.so]
#  0x00000001 (NEEDED)                     Shared library: [libexif.so]
#  0x00000001 (NEEDED)                     Shared library: [libjpeg.so]
#  0x00000001 (NEEDED)                     Shared library: [libskia.so]
#  0x00000001 (NEEDED)                     Shared library: [libhardware.so]
#  0x00000001 (NEEDED)                     Shared library: [libHWCamCfgSvr.so]
#  0x00000001 (NEEDED)                     Shared library: [liboeminfo.so]
#  0x00000001 (NEEDED)                     Shared library: [libnvme.so]
#  0x00000001 (NEEDED)                     Shared library: [libgui.so]
#  0x00000001 (NEEDED)                     Shared library: [libbinder.so]
#  0x00000001 (NEEDED)                     Shared library: [libc++.so]
#  0x00000001 (NEEDED)                     Shared library: [libc.so]
#  0x00000001 (NEEDED)                     Shared library: [libm.so]
#  0x0000000e (SONAME)                     Library soname: [hwcam.hi3635.m.GRACE.so]

# dlopen failed: library "libteec.so" not found
lib/libteec.so
lib64/libteec.so


# This is causing a bootloop
# 01-28 20:00:46.591  2813  2813 W art     : CheckJNI: method to register "print_powerlog_native" not in the given class. This is slow, consider changing your RegisterNatives calls.
# 01-28 20:00:46.591  2813  2813 E art     : Failed to register native method android.util.Log.print_powerlog_native(ILjava/lang/String;Ljava/lang/String;)I in /system/framework/framework.jar
# 01-28 20:00:46.591  2813  2813 E art     : ----- class 'Landroid/util/Log;' cl=0x0 -----
# 01-28 20:00:46.591  2813  2813 E art     :   objectSize=792 (744 from super)
# 01-28 20:00:46.591  2813  2813 E art     :   access=0x0008.0011
# 01-28 20:00:46.591  2813  2813 E art     :   super='java.lang.Class<java.lang.Object>' (cl=0x0)
# 01-28 20:00:46.591  2813  2813 E art     :   vtable (0 entries, 11 in super):
# 01-28 20:00:46.591  2813  2813 E art     :   direct methods (24 entries):
# 01-28 20:00:46.591  2813  2813 E art     :      0: void android.util.Log.<clinit>()
# 01-28 20:00:46.591  2813  2813 E art     :      1: void android.util.Log.<init>()
# 01-28 20:00:46.591  2813  2813 E art     :      2: int android.util.Log.d(java.lang.String, java.lang.String)
# 01-28 20:00:46.591  2813  2813 E art     :      3: int android.util.Log.d(java.lang.String, java.lang.String, java.lang.Throwable)
# 01-28 20:00:46.591  2813  2813 E art     :      4: int android.util.Log.e(java.lang.String, java.lang.String)
# 01-28 20:00:46.591  2813  2813 E art     :      5: int android.util.Log.e(java.lang.String, java.lang.String, java.lang.Throwable)
# 01-28 20:00:46.591  2813  2813 E art     :      6: java.lang.String android.util.Log.getStackTraceString(java.lang.Throwable)
# 01-28 20:00:46.591  2813  2813 E art     :      7: int android.util.Log.i(java.lang.String, java.lang.String)
# 01-28 20:00:46.591  2813  2813 E art     :      8: int android.util.Log.i(java.lang.String, java.lang.String, java.lang.Throwable)
# 01-28 20:00:46.591  2813  2813 E art     :      9: boolean android.util.Log.isLoggable(java.lang.String, int)
# 01-28 20:00:46.591  2813  2813 E art     :     10: int android.util.Log.println(int, java.lang.String, java.lang.String)
# 01-28 20:00:46.591  2813  2813 E art     :     11: int android.util.Log.println_native(int, int, java.lang.String, java.lang.String)
# 01-28 20:00:46.591  2813  2813 E art     :     12: android.util.Log$TerribleFailureHandler android.util.Log.setWtfHandler(android.util.Log$TerribleFailureHandler)
# 01-28 20:00:46.591  2813  2813 E art     :     13: int android.util.Log.v(java.lang.String, java.lang.String)
# 01-28 20:00:46.591  2813  2813 E art     :     14: int android.util.Log.v(java.lang.String, java.lang.String, java.lang.Throwable)
# 01-28 20:00:46.591  2813  2813 E art     :     15: int android.util.Log.w(java.lang.String, java.lang.String)
# 01-28 20:00:46.591  2813  2813 E art     :     16: int android.util.Log.w(java.lang.String, java.lang.String, java.lang.Throwable)
# 01-28 20:00:46.591  2813  2813 E art     :     17: int android.util.Log.w(java.lang.String, java.lang.Throwable)
# 01-28 20:00:46.591  2813  2813 E art     :     18: int android.util.Log.wtf(int, java.lang.String, java.lang.String, java.lang.Throwable, boolean, boolean)
# 01-28 20:00:46.591  2813  2813 E art     :     19: int android.util.Log.wtf(java.lang.String, java.lang.String)
# 01-28 20:00:46.591  2813  2813 E art     :     20: int android.util.Log.wtf(java.lang.String, java.lang.String, java.lang.Throwable)
# 01-28 20:00:46.591  2813  2813 E art     :     21: int android.util.Log.wtf(java.lang.String, java.lang.Throwable)
# 01-28 20:00:46.591  2813  2813 E art     :     22: void android.util.Log.wtfQuiet(int, java.lang.String, java.lang.String, boolean)
# 01-28 20:00:46.591  2813  2813 E art     :     23: int android.util.Log.wtfStack(java.lang.String, java.lang.String)
# 01-28 20:00:46.591  2813  2813 E art     :   static fields (12 entries):
# 01-28 20:00:46.591  2813  2813 E art     :      0: int android.util.Log.ASSERT
# 01-28 20:00:46.591  2813  2813 E art     :      1: int android.util.Log.DEBUG
# 01-28 20:00:46.591  2813  2813 E art     :      2: int android.util.Log.ERROR
# 01-28 20:00:46.591  2813  2813 E art     :      3: int android.util.Log.INFO
# 01-28 20:00:46.591  2813  2813 E art     :      4: int android.util.Log.LOG_ID_CRASH
# 01-28 20:00:46.591  2813  2813 E art     :      5: int android.util.Log.LOG_ID_EVENTS
# 01-28 20:00:46.591  2813  2813 E art     :      6: int android.util.Log.LOG_ID_MAIN
# 01-28 20:00:46.591  2813  2813 E art     :      7: int android.util.Log.LOG_ID_RADIO
# 01-28 20:00:46.591  2813  2813 E art     :      8: int android.util.Log.LOG_ID_SYSTEM
# 01-28 20:00:46.591  2813  2813 E art     :      9: int android.util.Log.VERBOSE
# 01-28 20:00:46.591  2813  2813 E art     :     10: int android.util.Log.WARN
# 01-28 20:00:46.591  2813  2813 E art     :     11: android.util.Log$TerribleFailureHandler android.util.Log.sWtfHandler
# 01-28 20:00:46.592  2813  2813 F art     : art/runtime/jni_internal.cc:497] JNI FatalError called: RegisterNatives failed for 'android/util/Log'; aborting...
#
# That's bad I'm not into higher level stuff and at the very last the dalvik vm
# wait I will just use grep for print_powerlog_native
# it says it is in system/framework/arm64/boot.oat and system/framework/arm/boot.oat
framework/arm64/boot.oat
framework/arm/boot.oat
#Hmm well and I should copy all the framework jars mentioned in the environ.rc which arent here yet.
framework/hwcustEmui.jar
framework/hwcustServices.jar
framework/hwcustwifi-service.jar
#Ok had no luck... But I was lucky by patching the frameworkbase. Had to fork all the stuff and create a manifest for it.
#gabry3795 made some fixes for a similar device and they worked. Got a basic understanding of whats going on thx to her.
#
#power log dlopen err:dlopen failed: library "libpowergenie_native3.so" not found
lib64/libpowergenie_native3.so
lib/libpowergenie_native3.so
#... and now I have to deal with that again:
#Failed to register native method com.android.internal.os.Zygote.ctrlSockets(II)I in /system/framework/framework.jar:classes2.dex
#and
#Failed to register native method com.android.internal.os.Zygote.procCtrlSockets(III)I
#Now it complains about camera stuff plus:
#Failed to register native method android.hardware.Camera.native_setup(Ljava/lang/Object;IILjava/lang/String;Z)I
#... This function was there but without a boolean. I "tried" to overload it - no I don't know anything about jni.
#seems to work. now it complains:
#Failed to register native method android.hardware.Camera.native_getFocusValue()I
#srsly.. now:
#Failed to register native method android.hardware.Camera.native_getFocusContrast()I
#ghee I don't wanna know what these dirty fixes will break....
#Failed to register native method android.hardware.Camera.native_cancelTakePicture()V
#Ahh now it seems to be done but:
#Failed to register native method android.media.AudioSystem.setLowPowerApk(Z)I
#one day... Don't tell me that there are 100x of those pls.
#Failed to register native method android.media.AudioSystem.getLowPowerApk(Z)I
#
#ok well it starts to complain about too much
#I don't have the source nor could I decompile it. but lets continue to fix it dirty
#KeyEvent-JNI: Unable to find static method obtain & Unable to find static field mHwFlags
#...now:
#JNI FatalError called: Native registration unable to find class 'android/hardware/fmradio/FmReceiverJNI';
#well this doesn't exist indeed... I will take it from here https://github.com/gp-b2g/frameworks_base/tree/master/core/java/android/hardware/fmradio
#It doesn't load completely but for the moment I don't care it doesn't seem to break the boot process anymore.
#...
#~Class android.until.Jlog not found
#Failed to register native method android.util.Jlog.print_janklog_native(IILjava/lang/String;)I
#I have no source for whatever this is. summy seems to be enough
#..
#JNI FatalError called: Native registration unable to find class 'com/huawei/hwextdevice/HWExtDeviceManager';
#stop it pls...
#ok I have enough I will make a different branch and try to get the native libandroidruntime.so to run!


#only in vendor
#lib/libstagefrighthw.so
#lib64/libstagefrighthw.so
#lib/libgralloc_ext.so
#lib64/libgralloc_ext.so

#^same got them caus of libandroid_runtime.so (stock)
#lib64/libhwextdevice.so
#lib/libhwextdevice.so
#lib64/libperfhub_client.so
#lib/libperfhub_client.so
#lib64/lib_oeminfo_interface.so
#lib/lib_oeminfo_interface.so


